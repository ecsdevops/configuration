project:
  info:
    version: "0.0.1-SNAPSHOT"
    name: "Managed Account Service"
    description: "Managed Account Service holds the collection of all investor accounts into a single unit. It reflects the grouped view of all the accounts against an investor. This service is used to manage household. All APIs for creating household and creating accounts under the household are exposed in this service. APIs are exposed to fetch household and account details."

spring:
  cloud.stream:
    function:
      definition: accountSupplier;custodianFailureEventConsumer;custodianEventConsumer
    bindings:
      accountSupplier-out-0:
        destination: household.event
        useNativeEncoding: true
#         producer:
#           partition-count: 2
      custodianEventConsumer-in-0:
        destination: custodian.event
        group: "${spring.application.name}"
        useNativeDecoding: true
      custodianFailureEventConsumer-in-0:
        destination: custodian.failure.event
        group: "${spring.application.name}"
        useNativeDecoding: true
        
  ################### DataSource Configuration ##########################
  datasource:
    url: jdbc:postgresql://${DB_URI}:5432/sb_household_db
    username: ${DB_USER:user}
    password: ${DB_USER_PASSWD:password}
    # HikariCP settings
    hikari:
      poolName: HikariPoolMAS
    
custodial-service:
  url: http://custodian-account/custodian-account/api/v1/accounts/{id}
  
service:
  communication:
    type: rest

eureka:
  client:
    enabled: true
  instance:
    appname: managed-account
    instanceId: managed-account:${spring.application.instance-id:${random.value}}
    metadata-map:
      "prometheus.scrape": "true"
      "prometheus.path": "/managed-account/actuator/prometheus"
